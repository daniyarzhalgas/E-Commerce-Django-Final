{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/cartReducers.js","reducers/productReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","logo.png","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","cart","state","arguments","length","undefined","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod","productList","products","loading","page","pages","error","productDetails","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfle","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","async","dispatch","getState","config","headers","Authorization","token","data","axios","get","response","detail","message","SearchBox","keyword","setKeyword","useState","history","useHistory","_jsxs","Form","onSubmit","e","preventDefault","push","location","pathname","className","children","_jsx","Control","name","onChange","target","value","Button","variant","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","LinkContainer","to","Brand","src","logo","alt","Toggle","Collapse","Nav","style","maxHeight","navbarScroll","Link","NavDropdown","title","Item","onClick","logoutHandler","removeItem","isAdmin","Footer","Row","Col","Rating","_ref","text","color","Product","Card","_id","Img","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProdcutReview","params","ListGroup","description","countInStock","xs","disabled","addToCartHandler","review","createdAt","substring","createProductReview","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","m","reduce","acc","toFixed","checkoutHandler","FormContainer","LoginScreen","email","setEmail","password","setpassword","redirect","login","username","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","orderCrate","itemsPrice","shippingPrice","taxPrice","index","placeorder","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","addPayPalScript","script","document","createElement","onload","body","appendChild","User","href","isDeliver","deliveredAt","PayPalButton","amount","onSuccess","paymentResult","payOrder","deliverHandler","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","createdProduct","successCreate","loadingCreate","errorCreate","deleteProduct","createProcutHandler","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","updateProduct","File","custom","file","files","formData","FormData","append","header","OrderListScreen","App","Router","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","getElementById"],"mappings":"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","file":"static/js/main.7724ce68.chunk.js","sourcesContent":["/* CONSTANTS USED IN HomeScreen COMPONENT */\r\nexport const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\n\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\n\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\n/* CONSTANTS USED IN ProductScreen COMPONENT */\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\n\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\n\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\n\r\n/* CONSTANTS USED IN ProductListScreen COMPONENT */\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\n\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\n\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\r\n\r\n/* CONSTANTS USED IN ProductListScreen COMPONENT */\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\n\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\n\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\r\n\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\n/* CONSTANTS USED IN ProductEditScreen COMPONENT */\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\n\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\n\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\r\n\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n\r\n/* CONSTANTS USED IN ProductScreen COMPONENT */\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\r\n\r\n/* CONSTANTS USED IN ProductCarousel COMPONENT */\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\r\n\r\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\r\n\r\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\r\n","/* ACTION TYPES USED IN CartScreen COMPONENT */\r\n\r\n// ADD ITEMS TO CART\r\nexport const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\n\r\n// REMOVE ITEMS FROM CART\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\n\r\n/* ACTION TYPES USED IN ShippingScreen COMPONENT */\r\n\r\n// SAVE SHIPPING ADDRESS\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\n\r\n// SAVE SHIPPING ADDRESS\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n\r\n// DELETE CART INFO IN LOCAL STORAGE AFTER ORDER PLACED\r\nexport const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\";\r\n","/* ACTION TYPES */\r\n\r\n// LOGIN\r\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\n\r\n// LOGOUT\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\n// REGISTER\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\n// USER DETAILS\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\n// UPDATE USER DETAILS\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\n// USER LIST\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\n// USER DELETE\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\n// USER EDIT\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n","/* ACTION TYPES */\r\n\r\n// PLACE ORDER\r\nexport const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\n\r\n// RESET STATE\r\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\r\n\r\n// ORDER DETAILS\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\n// PAYMENT\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\n// LIST OF ORDERS OF A USER\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\r\n\r\n// LIST OF ALL ORDERS OF ALL USERS\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\r\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\r\n\r\n// DELIVERY STATUS OF ORDERS\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n","/* REDUX */\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n/* IMPORTING REDUCERS */\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from \"./reducers/productReducers\";\r\n\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\n\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\n/* COMBINED REDUCER */\r\nconst reducer = combineReducers({\r\n  cart: cartReducer,\r\n\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfle: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\n\r\n/* PULLING DATA OUT OF LOCAL STORAGE AND LOAD IT INTO INITIAL STATE */\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\n/* INITIAL STATE */\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: {\r\n    userInfo: userInfoFromStorage,\r\n  },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\n/* REDUX STORE */\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","/* ACTION TYPES */\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from \"../constants/cartConstants\";\r\n\r\n/* REDUCER USED IN CartScreen & ShippingScreen COMPONENT */\r\nexport const cartReducer = (\r\n  state = {\r\n    cartItems: [],\r\n    shippingAddress: {},\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // IF ITEM DOESN'T EXIST IN CART WE ADD IT, IF IT ALREADY EXISTS THEN WE UPDATE IT'S QUANTITY\r\n\r\n    /* CartScreen COMPONENT */\r\n\r\n    case CART_ADD_ITEM: {\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    }\r\n\r\n    case CART_REMOVE_ITEM: {\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    }\r\n\r\n    /* ShippingScreen COMPONENT */\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n\r\n    /* PaymentScreen COMPONENT */\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n\r\n    /* PlaceOrderScreen COMPONENT */\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* ACTION TYPES */\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n} from \"../constants/productConstants\";\r\n\r\n/* REDUCER USED IN HomeScreen COMPONENT */\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n        products: [],\r\n      };\r\n\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        page: action.payload.page,\r\n        pages: action.payload.pages,\r\n      };\r\n\r\n    case PRODUCT_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN ProductScreen COMPONENT */\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return {\r\n        loading: true,\r\n        ...state,\r\n      };\r\n\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        product: action.payload,\r\n      };\r\n\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN ProductListScreen COMPONENT */\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case PRODUCT_DELETE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN ProductListScreen COMPONENT */\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        product: action.payload,\r\n      };\r\n\r\n    case PRODUCT_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN ProductEditScreen COMPONENT */\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        product: action.payload,\r\n      };\r\n\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN ProductScreen COMPONENT */\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN ProductCarousel COMPONENT */\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return {\r\n        loading: true,\r\n        products: [],\r\n      };\r\n\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload,\r\n      };\r\n\r\n    case PRODUCT_TOP_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* ACTION TYPES */\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\n/* REDUCER USED IN USER LOGIN IN LoginScreen COMPONENT */\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        userInfo: action.payload,\r\n      };\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case USER_LOGOUT:\r\n      return {}; /* CLEARS STATE */\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN USER REGISTRATION IN RegisterScreen COMPONENT */\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        userInfo: action.payload,\r\n      };\r\n\r\n    case USER_REGISTER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case USER_LOGOUT:\r\n      return {}; /* CLEARS STATE */\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN GETTING USER DETAILS IN ProfileScreen COMPONENT */\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case USER_DETAILS_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN UPDATING USER DETAILS IN ProfileScreen COMPONENT */\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        user: action.payload,\r\n      };\r\n\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}; /* RESET STATE */\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED TO GET LIST OF USERS IN UserList SCREEN */\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        users: action.payload,\r\n      };\r\n\r\n    case USER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED TO DELETE A USER FROM UserList SCREEN */\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case USER_DELETE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED TO EDIT A USER IN UserEdit SCREEN */\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case USER_UPDATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* ACTION TYPES */\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\n/* REDUCER USED IN PlaceOrder COMPONENT */\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN PlaceOrder COMPONENT TO STORE ORDER DETAILS */\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN OrderScreen COMPONENT TO MAKE PAYMENT */\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED TO GET DATA OF ALL THE ORDERS PLACED BY USER IN ProfileScreen COMPONENT */\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    // WHEN USER LOGS OUT WE WANT ALL DATA REGARDING ORDERS TO BE RESET AS WELL\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED TO GET DATA OF ALL THE ORDERS PLACED BY ALL USERS IN OrderListScreen COMPONENT */\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* REDUCER USED IN OrderScreen COMPONENT TO MAKE STATUS OF DELIVERY */\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* AXIOS */\r\nimport axios from \"axios\";\r\n\r\n/* ACTION TYPES */\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\";\r\n\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\n/* ACTION CREATOR USED IN USER LOGIN IN LoginScreen COMPONENT & HEADER */\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    /* MAKE POST REQUEST TO GET BACK THE USER TOKEN */\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      { username: email, password: password },\r\n      config\r\n    );\r\n\r\n    /* IF POST REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    /* SETTING VALUE OF USER INFO IN LOCAL STORAGE SO WE KNOW USER IS LOGGED IN */\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN USER LOGOUT IN LoginScreen COMPONENT & HEADER */\r\nexport const logout = () => (dispatch) => {\r\n  /* REMOVE USER INFO FORM LOCAL STORAGE */\r\n  localStorage.removeItem(\"userInfo\");\r\n\r\n  /* DISPATCH TO REMOVE USER INFO FORM STORE */\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  });\r\n  dispatch({\r\n    type: USER_DETAILS_RESET,\r\n  });\r\n  /* DISPATCH TO RESET THE DETAILS OF ORDERS MADE BY USER */\r\n  dispatch({\r\n    type: ORDER_LIST_MY_RESET,\r\n  });\r\n  /* DISPATCH TO RESET THE DETAILS OF USERS LIST */\r\n  dispatch({\r\n    type: USER_LIST_RESET,\r\n  });\r\n};\r\n\r\n/* ACTION CREATOR USED IN USER REGISTRATION IN RegisterScreen COMPONENT & HEADER */\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    /* MAKE POST REQUEST TO GET BACK THE USER TOKEN */\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      { name: name, email: email, password: password },\r\n      config\r\n    );\r\n\r\n    /* IF POST REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    /* AFTER REGISTRATION WE WANT TO IMMEDIATELY LOGIN THE USER */\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    /* SETTING VALUE OF USER INFO IN LOCAL STORAGE SO WE KNOW USER IS LOGGED IN */\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN GETTING USER DETAILS IN ProfileScreen COMPONENT  */\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    /* MAKE GET REQUEST TO GET BACK THE USER DATA */\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IN AUTHORISED HE'LL HAVE FULL ACCESS TO HIS PROFILE INFORMATION */,\r\n      },\r\n    };\r\n\r\n    // USING ${id} BECAUSE WHILE ACCESSING NORMAL USER WE'LL PASS STRING 'profile' BUT WHILE ACCESSING ADMIN PANEL WE'LL PASS THE 'id' SO LINK HAS TO BE DYNAMIC\r\n    const { data } = await axios.get(`/api/users/${id}/`, config);\r\n\r\n    /* IF GET REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN UPDATING USER DETAILS IN ProfileScreen COMPONENT  */\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    /* MAKE PUT REQUEST TO SET THE THE USER DATA */\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IN AUTHORISED HE'LL HAVE FULL ACCESS TO HIS PROFILE INFORMATION */,\r\n      },\r\n    };\r\n\r\n    // USING ${id} BECAUSE WHILE ACCESSING NORMAL USER WE'LL PASS STRING 'profile' BUT WHILE ACCESSING ADMIN PANEL WE'LL PASS THE 'id' SO LINK HAS TO BE DYNAMIC\r\n    const { data } = await axios.put(`/api/users/profile/update`, user, config);\r\n\r\n    /* IF PUT REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    /* AFTER UPDATING PROFILE INFORMATION WE WANT TO LOG THE USER IN WITH THE UPDATED INFO */\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    /* SETTING UPDATED VALUE OF USER INFO IN LOCAL STORAGE */\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED TO GET THE LIST OF USERS IN UserList SCREEN  */\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    /* MAKE GET REQUEST TO SET THE THE USERS LIST */\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IS ADMIN WE'LL BE ABLE TO SEE LIST OF USERS */,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED TO DELETE A USER IN UserList SCREEN */\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    /* MAKE DELETE REQUEST TO DELETE THE USER */\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IS ADMIN WE'LL BE ABLE TO DELETE THE USER */,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/users/delete/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED TO EDIT A USER IN UserUpdate SCREEN */\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    /* MAKE PUT REQUEST TO EDIT THE USER */\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IS ADMIN WE'LL BE ABLE TO EDIT THE USER */,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/update/${user._id}/`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n\r\n    /* AFTER UPDATING WE WANT TO RELOAD THE USER DATA */\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\n/* REACT ROUTER DOM */\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SearchBox() {\r\n  /* STATE */\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  let history =\r\n    useHistory(); /* CAN'T DIRECTLY USE HISTORY AS IT'S NOT AN ACTUAL PAGE SO CAN'T DESTRUCTURE PROPS */\r\n\r\n  /* HANDLER */\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // WHEN USER HITS SUBMIT, REDIRECT TO HOME PAGE TO SEE PRODUCTS AND APPEND ?keyword=...IN URL\r\n    if (keyword) {\r\n      history.push(`/?keyword=${keyword}&page=1`);\r\n    } else {\r\n      // IF WE HIT SUBMIT WITHOUT KEYWORD, WE DON'T WANT THE USER TO GET REDIRECTED IN THAT CASE RATHER STAY ON WHATEVER PAGE HE WAS\r\n      history.push(history.push(history.location.pathname));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} className=\"d-flex\">\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        className=\"mr-sm-2 ml-sm-5\"\r\n      ></Form.Control>\r\n\r\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2 mx-sm-2\">\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","export default __webpack_public_path__ + \"static/media/logo.462f53c2.png\";","import React from \"react\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\n\r\n/* REACT ROUTER BOOTSTRAP */\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { logout } from \"../actions/userActions\";\r\n\r\n/* COMPONENTS */\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nimport logo from \"../logo.png\";\r\n\r\nfunction Header() {\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userLogin;\r\n\r\n  /* HANDLER */\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              <img src={logo} alt=\"Otaku Shop\" />\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n\r\n          <Navbar.Collapse id=\"navbarScroll\">\r\n            <SearchBox />\r\n\r\n            <Nav\r\n              className=\"ms-auto my-2 my-lg-0\"\r\n              style={{ maxHeight: \"100px\" }}\r\n              navbarScroll\r\n            >\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Login\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\n/* REACT-BOOTSTRAP */\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; ProShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction Rating({ value, text, color }) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>{text ? text : \"\"}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\n\r\n/* REACT-BOOTSTRAP */\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n/* REACT ROUTER */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* COMPONENTS */\r\nimport Rating from \"./Rating\";\r\n\r\nfunction Product({ product }) {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n            color={\"#f8e825\"}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h3\">{product.price}₸</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","/* REACT BOOTSTRAP */\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        height: \"100px\",\r\n        width: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}\r\n","/* REACT BOOTSTRAP */\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nexport default function Message({ variant, children }) {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n}\r\n","import React from \"react\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\n/* REACT ROUTER BOOTSTRAP */\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction Paginate({ page, pages, keyword = \"\", isAdmin = false }) {\r\n  /* isAdmin IS SET TO FALSE BY DEFAULT, ONLY IN ADMIN ProductList PAGE IS WILL BE SET TO TRUE */\r\n\r\n  if (keyword) {\r\n    keyword = keyword.split(\"?keyword=\")[1].split(\"&\")[0];\r\n  }\r\n\r\n  /* \r\n  console.log(\"KEYWORD\", keyword);\r\n  output: ?keyword=iPhone&page=1 => iPhone&page=1 => iPhone\r\n  */\r\n\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? `/?keyword=${keyword}&page=${x + 1}`\r\n                : `/admin/productlist//?keyword=${keyword}&page=${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Paginate;\r\n","/* AXIOS */\r\nimport axios from \"axios\";\r\n\r\n/* ACTION TYPES */\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n} from \"../constants/productConstants\";\r\n\r\n/* ACTION CREATOR USED IN HomeScreen COMPONENT */\r\nexport const listProducts =\r\n  (keyword = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_LIST_REQUEST,\r\n      });\r\n\r\n      const { data } = await axios.get(`/api/products${keyword}`);\r\n\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n/* ACTION CREATOR USED IN ProductScreen COMPONENT */\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN DELETING PRODUCTS IN ProductListScreen COMPONENT */\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    /* MAKING API CALL TO DELETE PRODUCT */\r\n    // eslint-disable-next-line\r\n    const { data } = await axios.delete(`/api/products/delete/${id}/`, config);\r\n\r\n    /* IF GET REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN CREATING PRODUCTS IN ProductListScreen COMPONENT */\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    /* MAKING API CALL TO CREATE PRODUCT */\r\n    const { data } = await axios.post(`/api/products/create/`, {}, config);\r\n\r\n    /* IF POST REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN UPDATING PRODUCTS IN ProductEditScreen COMPONENT */\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    /* MAKING API CALL TO UPDATE PRODUCT */\r\n    const { data } = await axios.put(\r\n      `/api/products/update/${product._id}/`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    /* IF PUT REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    /* LOAD IN THE UPDATED PRODUCTS DETAILS */\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN CREATING PRODUCT REVIEWS IN ProductScreen COMPONENT */\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      });\r\n\r\n      // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      /* MAKING API CALL TO CREATE PRODUCT REVIEW */\r\n      const { data } = await axios.post(\r\n        `/api/products/${productId}/reviews/`,\r\n        review,\r\n        config\r\n      );\r\n\r\n      /* IF POST REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n/* ACTION CREATOR USED IN ProductCarousel COMPONENT */\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_TOP_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.get(`/api/products/top/`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, {useEffect} from \"react\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport {Carousel, Image} from \"react-bootstrap\";\r\n\r\n/* REACT - REDUX */\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n/* REACT ROUTER */\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/* COMPONENTS */\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\n\r\n/* ACTION TYPES */\r\nimport {listTopProducts} from \"../actions/productActions\";\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch();\r\n\r\n    /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n    const productTopRated = useSelector((state) => state.productTopRated);\r\n    const {error, loading, products} = productTopRated;\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts());\r\n    }, [dispatch]);\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <Carousel pause=\"hover\" className=\"bg-dark\">\r\n            {products.map((product) => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid/>\r\n\r\n                        <Carousel.Caption className=\"carousel.caption\">\r\n                            <h4>\r\n                                {product.name} ({product.price}₸)\r\n                            </h4>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default ProductCarousel;\r\n","import React, { useEffect } from \"react\";\r\n\r\n/* REACT-BOOTSTRAP */\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nfunction HomeScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const productList = useSelector((state) => state.productList);\r\n  const { products, page, pages, loading, error } = productList;\r\n\r\n  /* FIRING OFF THE ACTION CREATORS USING DISPATCH */\r\n\r\n  let keyword =\r\n    history.location\r\n      .search; /* IF USER SEARCHES FOR ANYTHING THEN THIS KEYWORD CHANGES AND USE EFFECT GETS TRIGGERED */\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  return (\r\n    <div>\r\n      {!keyword && <ProductCarousel />}\r\n\r\n      <h1>Latest Products</h1>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            {products.map((product) => {\r\n              return (\r\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                  <Product product={product} />\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n\r\n          <Paginate page={page} pages={pages} keyword={keyword} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n/* REACT ROUTER */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Card,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\n\r\n/* ACTION TYPES */\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductScreen({ match, history }) {\r\n  /* STATE */\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { product, loading, error } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProdcutReview,\r\n  } = productReviewCreate;\r\n\r\n  /* FIRING OFF THE ACTION CREATORS USING DISPATCH */\r\n\r\n  useEffect(() => {\r\n    // IF REVIEW SUCCESSFULLY SUBMITTED, RESET\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  /* HANDLERS */\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(createProductReview(match.params.id, { rating, comment }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                    color={\"#f8e825\"}\r\n                  />\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>Price: {product.price}₸</ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>{product.price}₸</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col xs=\"auto\" className=\"my-1\">\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      className=\"w-100\"\r\n                      disabled={product.countInStock === 0}\r\n                      type=\"button\"\r\n                      onClick={addToCartHandler}\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <h4 className=\"mt-3\">Reviews</h4>\r\n\r\n              {product.reviews.length === 0 && (\r\n                <Message variant=\"info\">No Reviews</Message>\r\n              )}\r\n\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n\r\n                    <Rating value={review.rating} color=\"f8e825\" />\r\n\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n\r\n                <ListGroup.Item>\r\n                  <h4>Write a Review</h4>\r\n\r\n                  {loadingProductReview && <Loader />}\r\n                  {successProductReview && (\r\n                    <Message variant=\"success\">Review Submitted</Message>\r\n                  )}\r\n                  {errorProdcutReview && (\r\n                    <Message variant=\"danger\">{errorProdcutReview}</Message>\r\n                  )}\r\n\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Review</Form.Label>\r\n\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"5\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        />\r\n                      </Form.Group>\r\n\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                        className=\"my-3\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message variant=\"info\">\r\n                      Please <Link to=\"/login\">Login</Link> to write a review.\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductScreen;\r\n","/* AXIOS */\r\nimport axios from \"axios\";\r\n\r\n/* ACTION TYPES */\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"../constants/cartConstants\";\r\n\r\n/* ACTION CREATOR USED IN CartScreen COMPONENT */\r\n\r\n/* FOR ADDING PRODUCTS TO CART */\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  // FETCHING PRODUCT DATA\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  // SETTING VALUE OF CART ITEMS IN LOCAL STORAGE\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n/* FOR REMOVING PRODUCTS FROM CART */\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  // SETTING VALUE OF CART ITEMS IN LOCAL STORAGE\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n/* ACTION CREATOR USED IN ShippingScreen COMPONENT */\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  // SETTING VALUE OF ADDRESS IN LOCAL STORAGE\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\n/* ACTION CREATOR USED IN PaymentScreen COMPONENT */\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  // SETTING VALUE OF PAYMENT METHOD IN LOCAL STORAGE\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from \"react\";\r\n\r\n/* REACT ROUTER */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Card,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Message from \"../components/Message\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n  /* GETTING DATA FROM URL IF PRESENT */\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n  //qty: '?qty=3' -> ['?qty',3] -> 3\r\n\r\n  /* FIRING OFF DISPATCH, BUT ONLY IF WE HAVE A PRODUCT ID & QUANTITY */\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  /* HANDLERS */\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Your cart is empty. <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n\r\n                  <Col m={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n\r\n                  <Col>{item.price}₸</Col>\r\n\r\n                  <Col md={3}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n\r\n                  <Col md={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              ₹\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n\r\n          <ListGroup.Item>\r\n            <Button\r\n              type=\"button\"\r\n              className=\"w-100\"\r\n              disabled={cartItems.length === 0}\r\n              onClick={checkoutHandler}\r\n            >\r\n              Proceed To Checkout\r\n            </Button>\r\n          </ListGroup.Item>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from \"react\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\nfunction FormContainer({ children }) {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n/* REACT ROUTER */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { login } from \"../actions/userActions\";\r\n\r\nfunction LoginScreen({ location, history }) {\r\n  /* STATE */\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /* SETTING UP REDIRECT */\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo, loading, error } = userLogin;\r\n\r\n  /* REDIRECTING AN ALREADY LOGGED IN USER, AS WE DON'T WANT THEM TO SEE THE LOGIN PAGE */\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  /* HANDLERS */\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    /* FIRING OFF THE ACTION CREATORS USING DISPATCH FOR LOGIN */\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={(e) => setpassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer ?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n/* REACT ROUTER */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { register } from \"../actions/userActions\";\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  /* STATE */\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /* SETTING UP REDIRECT */\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n\r\n  const { userInfo, loading, error } = userRegister;\r\n\r\n  /* REDIRECTING AN ALREADY LOGGED IN USER, AS WE DON'T WANT THEM TO SEE THE LOGIN PAGE */\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  /* HANDLERS */\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    /* DISABLE SUBMIT IF PASSWORDS DON'T MATCH */\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      /* FIRING OFF THE ACTION CREATORS USING DISPATCH FOR REGISTER */\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Register</h1>\r\n\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={(e) => setpassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"passwordConfirm\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account ?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Sign In\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Row, Col, Button, Form, Table } from \"react-bootstrap\";\r\n\r\n/* REACT ROUTER BOOTSTRAP */\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\n\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\n/* ACTION TYPES */\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nfunction ProfileScreen({ history }) {\r\n  /* STATE */\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n\r\n  const { user, loading, error } = userDetails;\r\n\r\n  /* WE NEED TO MAKE SURE USER IS LOGGED IN SO PULLING OUT USER LOGIN INFO */\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userLogin;\r\n\r\n  /* PULLING OUT SUCCESS FROM userUpdateProfile, IF SUCCESS IS TRUE WE WILL RESET STATE */\r\n  const userUpdateProfle = useSelector((state) => state.userUpdateProfle);\r\n\r\n  const { success } = userUpdateProfle;\r\n\r\n  /* PULLING OUT USER ORDER DETAILS TO DISPLAY ON THE PAGE */\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  /* SENDING USER TO LOGIN PAGE IF NOT LOGGED IN & SHOW PROFILE DATA IF LOGGED IN */\r\n  useEffect(() => {\r\n    // USER IS NOT LOGGED IN\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      // WE DON'T HAVE THE USER INFO SO WE DISPATCH AN ACTION TO GET THE DATA\r\n      if (!user || !user.name || success || userInfo._id !== user._id) {\r\n        /* (userInfo._id !== user._id) BECAUSE DURING USER EDIT STATE CHANGES SO WE WANT TO FIRE DISPATCH AGAIN HERE IF THE DATA ISN'T SAME AS THE USER AS WE ARE LOGGED IN  */\r\n        // RESETTING PROFILE BEFORE FETCHING DATA SO THAT WE ALWAYS HAVE UPDATED DATA\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n\r\n        // FETCHING USER DATA\r\n        dispatch(getUserDetails(\"profile\"));\r\n\r\n        // FETCHING USER ORDER DETAILS\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        // WE HAVE THE USER INFO SO WE SET OUR STATE\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  /* HANDLERS */\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    /* DISABLE SUBMIT IF PASSWORDS DON'T MATCH */\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        })\r\n      );\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setpassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"passwordConfirm\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th>Delivered</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>\r\n                    {order.createdAt ? order.createdAt.substring(0, 10) : null}\r\n                  </td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : null\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\">Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","/* AXIOS */\r\nimport axios from \"axios\";\r\n\r\n/* ACTION TYPES */\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n} from \"../constants/orderConstants\";\r\n\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\n/* ACTION CREATOR USED IN CREATING ORDER IN PlaceOrderScreen COMPONENT  */\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS, WE NEED TO BE LOGGED IN TO PLACE ORDER\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IN AUTHORISED HE'LL HAVE FULL ACCESS TO HIS PROFILE INFORMATION */,\r\n      },\r\n    };\r\n\r\n    /* MAKING API CALL TO SAVE THE ORDER DETAILS */\r\n    const { data } = await axios.post(`/api/orders/add/`, order, config);\r\n\r\n    /* IF PUT REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // REST CART INFO STORED IN STATE & LOCAL STORAGE AFTER ORDER PLACED\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN CREATING ORDER IN PlaceOrderScreen COMPONENT  */\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    /* MAKING API CALL TO GET THE ORDER DETAILS */\r\n    const { data } = await axios.get(`/api/orders/${id}/`, config);\r\n\r\n    /* IF GET REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN MAKING PAYMENT IN OrderScreen COMPONENT  */\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    /* MAKING API CALL TO SAVE THE PAYMENT DETAILS */\r\n    const { data } = await axios.put(\r\n      `/api/orders/${id}/pay/`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    /* IF PUT REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN FETCHING USERS ORDERS IN ProfileScreen COMPONENT */\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    /* MAKING API CALL TO GET THE DETAILS OF THE ORDERS MADE BY THE USER */\r\n    const { data } = await axios.get(`/api/orders/myorders/`, config);\r\n\r\n    /* IF GET REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN FETCHING ALL USERS ORDERS IN OrderListScreen COMPONENT */\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    /* MAKING API CALL TO GET THE DETAILS OF ALL THE ORDERS MADE BY THE ALL THE USERS */\r\n    const { data } = await axios.get(`/api/orders/`, config);\r\n\r\n    /* IF GET REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* ACTION CREATOR USED IN MARKING DELIVERY STATUS OF ORDERS IN OrderScreen COMPONENT  */\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    /* MAKING API CALL TO UPDATE ORDER DELIVERY STATUS */\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver/`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    /* IF PUT REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\n/* REACT ROUTER BOOTSTRAP */\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Login</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Login</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from \"react\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nfunction ShippingScreen({ history }) {\r\n  // PULLING OUT SHIPPING ADDRESS FROM CART\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const { shippingAddress } = cart;\r\n\r\n  // STATE\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // HANDLERS\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    /* FIRING OFF THE ACTION CREATORS USING DISPATCH TO SAVE ADDRESS */\r\n    dispatch(\r\n      saveShippingAddress({\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n      })\r\n    );\r\n\r\n    // PUSHING USER TO PAYMENTS PAGE AFTER SAVING ADDRESS\r\n    history.push(\"./payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address ? address : \"\"}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={city ? city : \"\"}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Postal Code\"\r\n            value={postalCode ? postalCode : \"\"}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Country\"\r\n            value={country ? country : \"\"}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button className=\"my-3\" type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from \"react\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\nfunction PaymentScreen({ history }) {\r\n  // PULLING OUT SHIPPING ADDRESS FROM CART\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const { shippingAddress } = cart;\r\n\r\n  // STATE\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  /* IF NO SHIPPING ADDRESS THEN REDIRECT TO ShippingAddress SCREEN */\r\n  if (!shippingAddress.address) {\r\n    history.push(\"./shipping\");\r\n  }\r\n\r\n  // HANDLERS\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n\r\n    // AFTER CHOSING THE PAYMENT METHOD REDIRECT USER TO PlaceOrder SCREEN\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\" className=\"my-3\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default PaymentScreen;\r\n\r\n","import React, { useEffect } from \"react\";\r\n\r\n/* REACT ROUTER */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Message from \"../components/Message\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\n/* ACTION TYPES */\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const orderCrate = useSelector((state) => state.orderCreate);\r\n\r\n  const { order, error, success } = orderCrate;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  // PRICE CALCULATIONS, WE ARE SETTING AN ATTRIBUTE TO OUR CART OBJECT BUT IT WON'T UPDATE OUR STATE, IT'S JUST FOR THIS PAGE\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n\r\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\r\n\r\n  cart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  // REDIRECT\r\n  if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  /* IF ORDER SUCCESSFULL AND WE HAVE ORDER ID, SEND USER TO USERS ACCOUNT TO VIEW THE ORDER */\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n\r\n      // RESET STATE\r\n      dispatch({\r\n        type: ORDER_CREATE_RESET,\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [success, history]);\r\n\r\n  // HANDLERS\r\n  const placeorder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n\r\n              <p>\r\n                <strong>Shipping Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment</h2>\r\n\r\n              <p>\r\n                <strong>Payment Method: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant=\"info\">Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X {item.price}₸ = ₸\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n\r\n                  <Col>{cart.itemsPrice}₸</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n\r\n                  <Col>{cart.shippingPrice}₸</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n\r\n                  <Col>{cart.taxPrice}₸</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n\r\n                  <Col>{cart.totalPrice}₸</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"w-100\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeorder}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n/* REACT ROUTER */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\n\r\n/* PAYPAL BUTTONS */\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\n/* COMPONENTS */\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\n\r\n/* ACTION TYPES */\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nfunction OrderScreen({ history, match }) {\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, error, loading } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // ITEMS PRICE GETS CALCULATED ONLY IF WE HAVE AN ORDER\r\n  if (!loading && !error) {\r\n    order.itemsPrice = order.orderItems\r\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      .toFixed(2);\r\n  }\r\n\r\n  // PAYPAL BUTTONS\r\n  const addPayPalScript = () => {\r\n    const script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src =\r\n      \"https://www.paypal.com/sdk/js?client-id=AYgflmsaM7ccNLPlKUiufIyw8-spOE4UuS5XyyTCvhzheA-1EUcZF9qGlgXBZaSKcP5BY0zTc9WgINKe\";\r\n    script.async = true;\r\n    script.onload = () => {\r\n      setSdkReady(true);\r\n    };\r\n    document.body.appendChild(script);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // IS USER IS NOT LOGGED IN THEN REDIRECT TO LOGIN PAGE\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    // CHECK IF WE HAVE THE ORDER DETAILS, IF NOT DISPATCH AN ACTION TO GET THE ORDER DETAILS\r\n    if (\r\n      !order ||\r\n      successPay ||\r\n      order._id !== Number(orderId) ||\r\n      successDeliver\r\n    ) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      // ACTIVATING PAYPAL SCRIPTS\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay, successDeliver, history, userInfo]);\r\n\r\n  /* HANDLERS */\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <div>\r\n      <h1>Order: {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n\r\n              <p>\r\n                <strong>Name: {order.User.name}</strong>\r\n              </p>\r\n\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.User.email}`}>{order.User.email}</a>\r\n              </p>\r\n\r\n              <p>\r\n                <strong>Shipping Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n\r\n              {order.isDeliver ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on{\" \"}\r\n                  {order.deliveredAt\r\n                    ? order.deliveredAt.substring(0, 10)\r\n                    : null}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment</h2>\r\n\r\n              <p>\r\n                <strong>Payment Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">\r\n                  Paid on {order.paidAt ? order.paidAt.substring(0, 10) : null}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n\r\n              {order.orderItems.length === 0 ? (\r\n                <Message variant=\"info\">Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X {item.price}₸ = ₸\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n\r\n                  <Col>{order.itemsPrice}₸</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n\r\n                  <Col>{order.shippingPrice}₸</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n\r\n                  <Col>₹{order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n\r\n                  <Col>{order.totalPrice}₸</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n\r\n            {loadingDeliver && <Loader />}\r\n\r\n            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDeliver && (\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn w-100\"\r\n                  onClick={deliverHandler}\r\n                >\r\n                  Mark As Delivered\r\n                </Button>\r\n              </ListGroup.Item>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from \"react\";\r\n\r\n/* REACT ROUTER BOOTSTRAP */\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Table, Button } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nfunction UserListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  /* PULLING OUT STATE */\r\n  const userList = useSelector((state) => state.userList);\r\n  const { users, loading, error } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // WE NEED THE SUCCESS VALUE SO WHEN WE SUCCESSFULLY DELETE THE USER WE WANT THE NEW DATA\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    // WE DON'T WANT NON ADMINS TO ACCESS THIS PAGE SO REDIRECT IF SOMEBODY TRIES TO\r\n\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  /* HANDLER */\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this user ?\"))\r\n      dispatch(deleteUser(id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n/* REACT ROUTER */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\n\r\n/* ACTION TYPES */\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n  /* GETTING USER ID FROM URL */\r\n  const userId = match.params.id;\r\n\r\n  /* STATE */\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, loading, error } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    /* IF USER SUCCESSFULLY UPDATED, RESET USER DETAILS & REDIRECT USER TO ADMIN PAGE */\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      /* IF WE DON'T HAVE A USER, OR IF WE HAVE DATA LOADED IN BUT WE ARE EDITING SOME OTHER USER THEN WE DISPATCH AND GET DATA OF THAT USER */\r\n      if (!user.name || user._id !== Number(userId)) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, user, userId, history, successUpdate]);\r\n\r\n  /* HANDLERS */\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\">Go Back</Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isAdmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\n\r\n/* REACT ROUTER BOOTSTRAP */\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\n\r\n/* ACTION TYPES */\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductListScreen({ match, history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  /* PULLING OUT STATE */\r\n  const productList = useSelector((state) => state.productList);\r\n  const { products, pages, page, loading, error } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    success: successDelete,\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    product: createdProduct,\r\n    success: successCreate,\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // GETTING PAGE NUMBER (KEYWORD IS PAGE NUMBER)\r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    // WE DON'T WANT NON ADMINS TO ACCESS THIS PAGE SO REDIRECT IF SOMEBODY TRIES TO\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    // CHECK IF PRODUCT CREATED, IF YES THEN REDIRECT TO EDIT PAGE\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(keyword));\r\n    }\r\n\r\n    // AFTER CREATING PRODUCT, LOAD IN PRODUCTS AGAIN, ADD successCreate IN DEPENDENCIES\r\n    // AFTER DELETING PRODUCT, LOAD IN PRODUCTS AGAIN, ADD successDelete IN DEPENDENCIES\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    keyword,\r\n  ]);\r\n\r\n  /* HANDLER */\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this product ?\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProcutHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n\r\n        <Col className=\"text-end\">\r\n          <Button className=\"my-3\" onClick={createProcutHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}₸</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n/* AXIOS */\r\nimport axios from \"axios\";\r\n\r\n/* REACT ROUTER */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\n\r\n/* ACTION TYPES */\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n  /* GETTING USER ID FROM URL */\r\n  const productId = match.params.id;\r\n\r\n  /* STATE */\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { product, loading, error } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    success: successUpdate,\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    // CHECK IF PRODUCT WAS UDPATED\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product.name || product._id !== Number(productId)) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, product, productId, history, successUpdate]);\r\n\r\n  /* HANDLERS */\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // DISPATCH TO UDPATE PRODUCT\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", file);\r\n    formData.append(\"product_id\", productId);\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        header: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/products/upload/\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/productlist\">Go Back</Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter Price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Image\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              />\r\n\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              />\r\n\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"countinstock\">\r\n              <Form.Label>Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter Stock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Enter Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from \"react\";\r\n\r\n/* REACT ROUTER BOOTSTRAP */\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Table, Button } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { listOrders } from \"../actions/orderActions\";\r\n\r\nfunction OrderListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  /* PULLING OUT STATE */\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { orders, loading, error } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    // WE DON'T WANT NON ADMINS TO ACCESS THIS PAGE SO REDIRECT IF SOMEBODY TRIES TO\r\n\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  /* HANDLER */\r\n\r\n  return (\r\n    <div>\r\n      <h1>Orders</h1>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.User && order.User.name}</td>\r\n                <td>{order.createdAt && order.createdAt.substring(0, 10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  {order.isDeliver ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"dark\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderListScreen;\r\n","/* REACT BOOTSTRAP */\r\nimport { Container } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\r\nimport OrderListScreen from \"./screens/OrderListScreen\";\r\n\r\n/* REACT ROUTER */\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Container>\r\n        <main className=\"py-3\">\r\n          <Route exact path=\"/\" component={HomeScreen} />\r\n\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n\r\n          <Route path=\"/register\" component={RegisterScreen} />\r\n\r\n          <Route path=\"/profile\" component={ProfileScreen} />\r\n\r\n          <Route path=\"/shipping\" component={ShippingScreen} />\r\n\r\n          <Route path=\"/payment\" component={PaymentScreen} />\r\n\r\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n\r\n          <Route path=\"/order/:id\" component={OrderScreen} />\r\n\r\n          <Route path=\"/product/:id\" component={ProductScreen} />\r\n\r\n          <Route path=\"/cart/:id?\" component={CartScreen} />\r\n\r\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\r\n\r\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\r\n\r\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\r\n\r\n          <Route path=\"/admin/productlist\" component={ProductListScreen} />\r\n\r\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\r\n        </main>\r\n      </Container>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n/* REDUX */\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\n/* COMPONENTS */\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n/* STYLING */\r\nimport \"./index.css\";\r\nimport \"./bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}